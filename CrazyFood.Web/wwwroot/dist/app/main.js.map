{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/Models/UserAC.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\">\\r\\n              <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n              <span class=\\\"icon-bar\\\"></span>\\r\\n              <span class=\\\"icon-bar\\\"></span>\\r\\n              <span class=\\\"icon-bar\\\"></span>\\r\\n          </button>\\r\\n          <a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\" >CrazyFood.Web</a>\\r\\n      </div>\\r\\n      <div class=\\\"navbar-collapse collapse\\\">\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n          <li><a routerLink=\\\"/\\\">Home</a></li>\\r\\n        </ul>\\r\\n        <ul *ngIf=\\\"user\\\" class=\\\"nav navbar-nav ml-auto\\\">\\r\\n          <li><a routerLink=\\\"/Customer/{{user.Id}}\\\">{{user.Email}}</a>\\r\\n          <li><a (click)=\\\"Logout()\\\">Logout</a></li>\\r\\n        </ul>\\r\\n        \\r\\n        <ul *ngIf=\\\"user==null\\\" class=\\\"nav navbar-nav ml-auto\\\">\\r\\n              <li><a >Register</a></li>\\r\\n              <li><a href=\\\"https://localhost:44303/Account/Login\\\">Login</a></li>\\r\\n        </ul>\\r\\n          \\r\\n      </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","export class UserAC {\r\n\r\n  Id: string;\r\n  Name: string;\r\n  Phone: string;\r\n  Address: string;\r\n  Email: string;\r\n  Roles: string[];\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./list-of-restaurant/list-of-restaurant.module').then(mod => mod.ListOfRestaurantModule)\r\n  },\r\n  {\r\n    path: 'RestaurantDetails/:restaurantId',\r\n    loadChildren: ()=> import('./restaurant-details/restaurant-details.module').then(mod => mod.RestaurantDetailsModule)\r\n  },\r\n  {\r\n    path: 'Customer/:customerId',\r\n    loadChildren:()=> import('./customer/customer.module').then(mod=>mod.CustomerModule)\r\n  },\r\n  {\r\n    path: 'Admin',\r\n    loadChildren: () => import('./restaurant/restaurant.module').then(mod => mod.RestaurantModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserAC } from './Models/UserAC';\r\nimport { UserService } from './user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n    \r\n  title = 'CrazyFood Corner';\r\n\r\n  user: UserAC;\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.GetLoggedInUser();\r\n  }\r\n\r\n  GetLoggedInUser() {\r\n    this.userService.GetLoggedInUser().subscribe(res => {\r\n      this.user = res;\r\n    }, err => {\r\n        this.user = null;\r\n    });\r\n  }\r\n\r\n  Logout() {   \r\n    this.userService.Logout();\r\n    this.GetLoggedInUser();\r\n    debugger;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserAC } from './Models/UserAC';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  currentUser: UserAC = new UserAC();\r\n  rootUrl = \"https://localhost:44303/\";\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.GetLoggedInUser().subscribe(res => {\r\n      this.currentUser = res;\r\n    },\r\n      err => {\r\n        this.currentUser = null;\r\n      });\r\n  }\r\n\r\n  GetLoggedInUser(): Observable<UserAC> {\r\n    return this.http.get<UserAC>(this.rootUrl + \"api/Users/GetLoggedInUSer\");\r\n  }\r\n\r\n  GetUserDetails(userId: string): Observable<UserAC> {\r\n   \r\n    return this.http.get<UserAC>(this.rootUrl + \"api/Users/GetUserDetails/\" + userId);\r\n  }\r\n\r\n  Logout() {\r\n\r\n    var url = this.rootUrl + \"api/Users/Logout\";\r\n    this.http.post(url, null).subscribe(\r\n      res => {\r\n        this.router.navigateByUrl(\"/\");\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}