{"version":3,"sources":["./src/app/list-of-restaurant/list-of-restaurant/list-of-restaurant.component.html","./src/app/Models/Restaurant.ts","./src/app/list-of-restaurant/list-of-restaurant-routing.module.ts","./src/app/list-of-restaurant/list-of-restaurant.module.ts","./src/app/list-of-restaurant/list-of-restaurant.service.ts","./src/app/list-of-restaurant/list-of-restaurant/list-of-restaurant.component.css","./src/app/list-of-restaurant/list-of-restaurant/list-of-restaurant.component.ts"],"names":[],"mappings":"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","file":"list-of-restaurant-list-of-restaurant-module.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\r\\n  <div  class=\\\"col-md-2\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"cityId\\\">Filter</label>\\r\\n        <select class=\\\"form-control\\\" id=\\\"cityId\\\" (change)=\\\"onChange($event.target.value)\\\">\\r\\n          <option value=\\\"0\\\" selected>All Restaurant</option>\\r\\n          <option value=\\\"1\\\">Vadodara</option>\\r\\n          <option value=\\\"2\\\">Ahmedabad</option>\\r\\n        </select>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"user?.Roles.includes('Admin')\\\">\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink=\\\"/Admin\\\">Add Restaurant</a>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n\\r\\n    <div *ngFor=\\\"let restaurant of RestaurantList\\\">\\r\\n\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <a class=\\\"panel-title\\\" routerLink=\\\"/RestaurantDetails/{{restaurant.Restaurant.Id}}\\\">{{restaurant.Restaurant.Name}}</a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"panel-body preventcopy\\\">\\r\\n          <h4>City: {{restaurant.Restaurant.City.CityName}}</h4>\\r\\n          <h4>Address: {{restaurant.Restaurant.RestaurantLocation}}</h4>\\r\\n          <hr>\\r\\n          <h4>Cost for two:  {{restaurant.Restaurant.AverageCost}}</h4>\\r\\n          <h4>Opening hours: {{restaurant.Restaurant.OpeningHours}}</h4>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"panel-footer\\\">\\r\\n          <div class=\\\"btn-group btn-group-justified\\\">\\r\\n            <div class=\\\"btn-group\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Phone</button>\\r\\n            </div>\\r\\n            <div class=\\\"btn-group\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"GoToMenu(restaurant.Restaurant.Id)\\\">Menu</button>\\r\\n            </div>\\r\\n            <div class=\\\"btn-group\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!hasOnlineOrder(restaurant)\\\" (click)=\\\"GoToOrder(restaurant.Restaurant.Id)\\\">\\r\\n                Order Online\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"btn-group\\\" *ngIf=\\\"user?.Roles?.includes('Admin')\\\">\\r\\n              <a class=\\\"btn btn-primary\\\" routerLink=\\\"/Admin/UpdateRestaurant/{{restaurant.Restaurant.Id}}\\\">\\r\\n                Update Restaurant\\r\\n              </a>\\r\\n            </div>\\r\\n            <div class=\\\"btn-group\\\" *ngIf=\\\"user?.Roles?.includes('Admin')\\\">\\r\\n              <a class=\\\"btn btn-primary\\\" routerLink=\\\"/Admin/DeleteRestaurant/{{restaurant.Restaurant.Id}}\\\">\\r\\n                Delete Restaurant\\r\\n              </a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\r\\n          <div class=\\\"modal-dialog modal-sm\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n\\r\\n              <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n                <h4 class=\\\"modal-title\\\">Phone Number</h4>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                {{restaurant.Restaurant.PhoneNumber}}\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-2\\\"></div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { City } from './City';\r\nimport { AverageRating } from './AverageRating';\r\n\r\nexport class Restaurant{\r\n    Id : number\r\n    Name : string \r\n    PhoneNumber:string \r\n    EmailId:string\r\n    AverageCost:number\r\n    OpeningHours:string \r\n    RestaurantLocation:string \r\n    HasOnlineBooking:boolean\r\n    CityId : number\r\n    City :City\r\n    AverageRating:AverageRating\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListOfRestaurantComponent } from './list-of-restaurant/list-of-restaurant.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component:ListOfRestaurantComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ListOfRestaurantRoutingModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ListOfRestaurantRoutingModule } from './list-of-restaurant-routing.module';\r\nimport { ListOfRestaurantComponent } from './list-of-restaurant/list-of-restaurant.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [ListOfRestaurantComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ListOfRestaurantRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class ListOfRestaurantModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { RestaurantAC } from '../Models/RestaurantAC';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListOfRestaurantService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  GetAllRestaurants():Observable<RestaurantAC[]>{\r\n   \r\n    return this.http.get<RestaurantAC[]>(\"https://localhost:44303/api/Restaurants/GetAll\");\r\n  }\r\n\r\n\r\n  GetRestaurantsOfCity(cityId: number): Observable<RestaurantAC[]> {\r\n    return this.http.get<RestaurantAC[]>(\"https://localhost:44303/api/Restaurants/RestaurantsOfCity/\" + cityId);\r\n  }\r\n}\r\n","module.exports = \".preventcopy { -webkit-touch-callout: none; /* iOS Safari */ -webkit-user-select: none; /* Safari */ /* Konqueror HTML */ -moz-user-select: none; /* Old versions of Firefox */ -ms-user-select: none; /* Internet Explorer/Edge */ user-select: none; /* Non-prefixed version, currently\\r\\n                                  supported by Chrome, Opera and Firefox */ }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlzdC1vZi1yZXN0YXVyYW50L2xpc3Qtb2YtcmVzdGF1cmFudC9saXN0LW9mLXJlc3RhdXJhbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxlQUFlLDJCQUEyQixFQUFFLGVBQWUsRUFBRSx5QkFBeUIsRUFBRSxXQUFXLEVBQTRCLG1CQUFtQixFQUFFLHNCQUFzQixFQUFFLDRCQUE0QixFQUFFLHFCQUFxQixFQUFFLDJCQUEyQixFQUFFLGlCQUFpQixFQUFFOzBFQUN2TSxFQUFFIiwiZmlsZSI6InNyYy9hcHAvbGlzdC1vZi1yZXN0YXVyYW50L2xpc3Qtb2YtcmVzdGF1cmFudC9saXN0LW9mLXJlc3RhdXJhbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcmV2ZW50Y29weSB7IC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTsgLyogaU9TIFNhZmFyaSAqLyAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOyAvKiBTYWZhcmkgKi8gLWtodG1sLXVzZXItc2VsZWN0OiBub25lOyAvKiBLb25xdWVyb3IgSFRNTCAqLyAtbW96LXVzZXItc2VsZWN0OiBub25lOyAvKiBPbGQgdmVyc2lvbnMgb2YgRmlyZWZveCAqLyAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7IC8qIEludGVybmV0IEV4cGxvcmVyL0VkZ2UgKi8gdXNlci1zZWxlY3Q6IG5vbmU7IC8qIE5vbi1wcmVmaXhlZCB2ZXJzaW9uLCBjdXJyZW50bHlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1cHBvcnRlZCBieSBDaHJvbWUsIE9wZXJhIGFuZCBGaXJlZm94ICovIH1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { RestaurantAC } from 'src/app/Models/RestaurantAC';\r\nimport { ListOfRestaurantService } from '../list-of-restaurant.service';\r\nimport { Restaurant } from '../../Models/Restaurant';\r\nimport { Route, Router } from '@angular/router';\r\nimport { UserAC } from '../../Models/UserAC';\r\nimport { UserService } from '../../user.service';\r\n\r\n@Component({\r\n  selector: 'app-list-of-restaurant',\r\n  templateUrl: './list-of-restaurant.component.html',\r\n  styleUrls: ['./list-of-restaurant.component.css']\r\n})\r\nexport class ListOfRestaurantComponent implements OnInit {\r\n\r\n  RestaurantList: RestaurantAC[];\r\n  Restaurant = new Restaurant();\r\n  cityId: number;\r\n  user: UserAC;\r\n\r\n  constructor(private service: ListOfRestaurantService,\r\n              private router: Router,\r\n              private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.GetRestaurants();\r\n    this.GetCurrentUSer();\r\n  }\r\n\r\n  GetCurrentUSer() {\r\n    this.userService.GetLoggedInUser().subscribe(res => {\r\n      this.user = res\r\n    },\r\n      err => {\r\n        console.log(err)\r\n      });\r\n   }\r\n\r\n  GetRestaurants(): void{\r\n\r\n    this.service.GetAllRestaurants().subscribe(res => {\r\n      this.RestaurantList = res;\r\n      \r\n    })\r\n  }\r\n\r\n  GetRestaurantOfCity(id: number): void {\r\n    this.service.GetRestaurantsOfCity(id).subscribe(res => {\r\n      this.RestaurantList = res;\r\n    })\r\n  }\r\n\r\n  hasOnlineOrder(restaurant: RestaurantAC): boolean {\r\n\r\n    this.Restaurant = restaurant.Restaurant\r\n    return this.Restaurant.HasOnlineBooking;\r\n  }\r\n\r\n  GoToMenu(id: number) {\r\n    this.router.navigateByUrl('/RestaurantDetails/'+id+'/Menu');\r\n  }\r\n  GoToOrder(id: number) {\r\n    this.router.navigateByUrl('/RestaurantDetails/' + id + '/Order/' + id);\r\n  }\r\n\r\n  onChange(deviceValue) {\r\n    if (deviceValue == 0) {\r\n      this.GetRestaurants();\r\n    }\r\n    else {\r\n      this.GetRestaurantOfCity(deviceValue);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}